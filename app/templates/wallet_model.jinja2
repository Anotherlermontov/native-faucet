<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Uniswap Wallet Options</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .wrapper {
            display: flex;
            flex-direction: column;
            background-color: #f8f9fa;
            width: 100%;
            padding: 14px 16px 16px;
            gap: 16px;
        }

        .option-container, .option-card-clickable {
            display: flex;
            align-items: center;
            padding: 16px;
            gap: 12px;
            border-radius: 16px;
            border: 1px solid #e0e0e0;
            max-height: 72px;
            justify-content: space-between;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .option-container:hover, .option-card-clickable:hover {
            background-color: #e0e0e0;
        }

        .app-icon {
            height: 40px;
            width: 40px;
            border-radius: 10px;
            box-shadow: 0 1.179px 3.537px rgba(255, 117, 249, 0.24);
        }

        .tag-container {
            display: block;
        }

        @media screen and (max-width: 300px) {
            .tag-container {
                display: none;
            }
        }

        .line {
            height: 1px;
            width: 100%;
            background-color: #e0e0e0;
        }

        .option-grid {
            display: grid;
            flex: 1;
            gap: 2px;
            border-radius: 12px;
            overflow: hidden;
        }

        .text {
            color: #333;
        }

        .text.button-label {
            font-weight: bold;
        }

        .text.body-label {
            color: #666;
        }

        .text.detected, .text.other-wallets, .text.caption {
            font-size: 12px;
            color: #999;
        }

        .option-card-left {
            display: flex;
            flex-direction: row;
            align-items: center;
        }

        .option-card-clickable {
            background-color: unset;
            border: none;
            display: flex;
            flex: 1;
            justify-content: space-between;
            padding: 18px;
            opacity: 1;
        }

        .option-card-clickable.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .header-text {
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
            font-weight: 535;
            padding: 0 8px;
        }

        .icon-wrapper {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .icon-wrapper img {
            border-radius: 12px;
        }

        .recent-badge {
            border-radius: 4px;
            padding: 1px 4px;
            background-color: #eef;
            color: #00f;
        }
    </style>
</head>
<body>
    <div class="wrapper" data-testid="wallet-modal">
        <div class="connection-error-view"></div>
        <div class="auto-row" style="justify-content: space-between; width: 100%;">
            <div class="sub-header">Connect a wallet</div>
            <button class="icon-button" data-testid="wallet-settings" onclick="openSettings()">
                <img src="{{ url_for('static', filename='settings-icon.png') }}" alt="Settings Icon" />
            </button>
        </div>
        <div class="column" style="gap: 16px;">
            <div class="column" style="gap: 16px; flex: 1;">
                <div class="row" style="flex: 1; align-items: flex-start;">
                    <div class="option-grid" data-testid="option-grid">
                        <!-- Options will be dynamically populated here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openSettings() {
            // Function to open settings
            console.log("Settings opened");
        }

         async function connect(connectorId) {
            if (connectorId === '1') {
                // MetaMask connection logic
                if (typeof window.ethereum !== 'undefined') {
                    try {
                        await window.ethereum.request({ method: 'eth_requestAccounts' });
                        console.log('MetaMask connected');
                    } catch (error) {
                        console.error('MetaMask connection error:', error);
                    }
                } else {
                    console.error('MetaMask not installed');
                }
            } else {
                console.log('Connecting to wallet with connector ID:', connectorId);
            }
        }

        function isIFramed() {
            // Function to check if the app is iframed
            return window.self !== window.top;
        }

        // Populate options dynamically if needed
        document.addEventListener("DOMContentLoaded", function () {
            const optionGrid = document.querySelector(".option-grid");

            // Example of dynamically adding options
            const connectors = [
                { id: '1', name: 'MetaMask', icon: '/static/images/logos/metamask-icon.svg' },
            ];

            connectors.forEach(connector => {
                const optionWrapper = document.createElement("div");
                optionWrapper.className = `wrapper ${isIFramed() ? 'disabled' : ''}`;

                const optionCardClickable = document.createElement("button");
                optionCardClickable.className = "option-card-clickable";
                optionCardClickable.onclick = () => connect(connector.id);
                optionCardClickable.innerHTML = `
                    <div class="option-card-left">
                        <div class="icon-wrapper">
                            <img src="${connector.icon}" alt="${connector.name}" />
                        </div>
                        <div class="header-text">${connector.name}</div>
                    </div>
                `;

                optionWrapper.appendChild(optionCardClickable);
                optionGrid.appendChild(optionWrapper);
            });
        });
    </script>
</body>
</html>
