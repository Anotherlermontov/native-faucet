<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Swap Header</title>
  <style>
    .row-between {
      display: flex;
      justify-content: space-between;
      margin-bottom: 12px;
      padding-right: 4px;
    }
    .header-button-container {
      display: flex;
      gap: 16px;
    }
    .header-button-container.compact {
      gap: 0;
    }
    .swap-header-tab-button {
      padding: 8px 12px;
    }
    .swap-header-tab-button.active {
      font-weight: bold;
    }




    .details-container {
      display: flex;
      flex-direction: column;
      padding: 0 12px 8px;
      gap: 8px;
    }
    .styled-alert-triangle {
      margin-right: 8px;
      min-width: 24px;
    }
    .confirm-button {
      height: 56px;
      border: none;
      background-color: red;
      color: white;
      cursor: pointer;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .dropdown-controller-wrapper {
      display: flex;
      align-items: center;
      margin-right: -6px;
      padding: 0 16px;
      min-width: fit-content;
      white-space: nowrap;
    }
    .dropdown-button {
      padding: 0 16px;
      margin: 4px 0;
      height: 28px;
      display: flex;
      align-items: center;
      cursor: pointer;
      background: none;
      border: none;
    }
    .help-link {
      width: 100%;
      text-align: center;
      margin: 16px 0 4px;
    }
  </style>
</head>
<body>
  <div id="root">
    <div class="row-between" style="color: #666;">
      <div class="header-button-container compact">
        <button class="swap-header-tab-button active" onclick="onTabClick('swap')">
          <span>Swap</span>
        </button>
        <button class="swap-header-tab-button" onclick="onTabClick('limit')">
          <span>Limit</span>
        </button>
        <button class="swap-header-tab-button" onclick="onTabClick('send')" style="display: none;">
          <span>Send</span>
        </button>
        <button class="swap-buy-fiat-button" onclick="triggerBuyFlow()">
          <span>Buy Fiat</span>
        </button>
      </div>
      <div class="settings-tab" style="display: none;">
        <!-- Settings Tab content -->
      </div>
    </div>



    <div class="details-container" id="details-container">
      <!-- Limit or Swap Line Items will be inserted here -->
    </div>
    <div id="show-accept-changes" style="display: none;">
      <div class="row-between">
        <div class="row-fixed">
          <svg class="styled-alert-triangle" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path d="M10.29 3.86L1.82 18a1 1 0 0 0 .86 1.5h18.64a1 1 0 0 0 .86-1.5l-8.47-14.14a1 1 0 0 0-1.72 0z"></path>
            <line x1="12" y1="9" x2="12" y2="13"></line>
            <line x1="12" y1="17" x2="12.01" y2="17"></line>
          </svg>
          <span id="price-updated-text">Price Updated</span>
        </div>
        <button id="accept-button">Accept</button>
      </div>
    </div>
    <div id="auto-row">
      <button class="confirm-button" id="confirm-swap-button">
        Confirm Swap
      </button>
      <a href="#" class="help-link" id="help-link" style="display: none;">Help Link</a>
    </div>
  </div>

  <script>
    const PathnameToTab = {
      '/swap': 'swap',
      '/send': 'send',
      '/limit': 'limit',
    };

    let currentTab = 'swap';
    const isIFramed = () => window.self !== window.top;

    function onTabClick(tab) {
      console.log('Tab clicked:', tab);
      currentTab = tab;
      updateTabDisplay();
    }

    function triggerBuyFlow() {
      console.log('Trigger buy flow');
    }

    function updateTabDisplay() {
      document.querySelectorAll('.swap-header-tab-button').forEach(button => {
        button.classList.remove('active');
      });
      document.querySelector(`.swap-header-tab-button[onclick="onTabClick('${currentTab}')"]`).classList.add('active');

      if (currentTab === 'swap') {
        document.querySelector('.settings-tab').style.display = 'flex';
      } else {
        document.querySelector('.settings-tab').style.display = 'none';
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      const pathname = window.location.pathname;
      currentTab = PathnameToTab[pathname] || 'swap';
      if (pathname === '/buy') {
        triggerBuyFlow();
      }
      updateTabDisplay();
    });



    const isLimitTrade = false; // Change this based on trade type
    const allowance = { state: 'REQUIRED', needsSetupApproval: true }; // Dummy data
    const swapErrorMessage = null; // Dummy data
    const isLoading = false; // Dummy data
    const trade = {}; // Dummy data
    const allowedSlippage = 0.5; // Dummy data
    const priceImpact = null; // Dummy data
    const fiatValueInput = { data: 100, isLoading: false }; // Dummy data
    const fiatValueOutput = { data: 120, isLoading: false }; // Dummy data
    const routerPreference = 'API'; // Dummy data
    const showAcceptChanges = false; // Dummy data
    const callToAction = { buttonText: 'Approve and Swap', helpLink: { text: 'Help', url: '#' } }; // Dummy data

    const detailsContainer = document.getElementById('details-container');
    const confirmButton = document.getElementById('confirm-swap-button');
    const helpLink = document.getElementById('help-link');

    function updateUI() {
      if (isLimitTrade) {
        detailsContainer.innerHTML = `
          <div>Exchange Rate: ...</div>
          <div>Expiry: ...</div>
          <div>Swap Fee: ...</div>
          <div>Network Cost: ...</div>
        `;
      } else {
        detailsContainer.innerHTML = `
          <button class="dropdown-button" onclick="toggleShowMore()">Show More</button>
          <div>Exchange Rate: ...</div>
          <div id="more-details" style="display: none;">
            <div>Price Impact: ...</div>
            <div>Max Slippage: ...</div>
            <div>Minimum Output: ...</div>
            <div>Maximum Input: ...</div>
          </div>
          <div>Input Token Fee on Transfer: ...</div>
          <div>Output Token Fee on Transfer: ...</div>
          <div>Swap Fee: ...</div>
          <div>Network Cost: ...</div>
        `;
      }

      confirmButton.innerHTML = isLoading ? '<span>Loading...</span>' : `<span>${callToAction.buttonText}</span>`;
      if (callToAction.helpLink) {
        helpLink.style.display = 'block';
        helpLink.href = callToAction.helpLink.url;
        helpLink.innerHTML = callToAction.helpLink.text;
      } else {
        helpLink.style.display = 'none';
      }
    }

    function toggleShowMore() {
      const moreDetails = document.getElementById('more-details');
      moreDetails.style.display = moreDetails.style.display === 'none' ? 'block' : 'none';
    }

    document.addEventListener('DOMContentLoaded', () => {
      updateUI();
    });

    confirmButton.addEventListener('click', () => {
      console.log('Confirm Swap clicked');
    });
  </script>
</body>
</html>
